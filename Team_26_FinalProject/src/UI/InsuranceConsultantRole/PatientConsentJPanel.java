/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.InsuranceConsultantRole;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.Blood_Bank_Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import Magic.Design.*;
import Magic.Design.MyJLabel;
import Magic.Design.MyTableFormat;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Properties;
import javax.imageio.ImageIO;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import java.util.Properties;
import javax.mail.*;
import javax.mail.internet.*;

/**
 *
 * @author anchitha
 */
public class PatientConsentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PatientConsentJPanel
     */
    private EcoSystem system;
    private UserAccount userAccount;
    private Network network;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();

    public PatientConsentJPanel(EcoSystem system, UserAccount userAccount, Network network) {
        initComponents();
        this.system = system;
        this.userAccount = userAccount;
        this.network = network;
        tblPatientConsent.getTableHeader().setDefaultRenderer(new MyTableFormat());
        populatePatientConsentTable();
    }

    public void populatePatientConsentTable() {
        DefaultTableModel model = (DefaultTableModel) tblPatientConsent.getModel();

        model.setRowCount(0);

        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getPatient();
            row[2] = request.getPatient().getName();
            // row[3] = request.getPatient().getContact();
            row[3] = request.getPatient().getEmailID();
            row[4] = request.getStatus();

            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatientConsent = new javax.swing.JTable();
        btnApproval = new javax.swing.JButton();
        btnDisapproval = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 221, 228));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblPatientConsent.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblPatientConsent.setForeground(new java.awt.Color(51, 51, 51));
        tblPatientConsent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Number", "Patient ID", "Patient Name", "Patient email", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPatientConsent.setFocusable(false);
        tblPatientConsent.setGridColor(new java.awt.Color(0, 0, 0));
        tblPatientConsent.setRowHeight(30);
        jScrollPane1.setViewportView(tblPatientConsent);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 1150, 190));

        btnApproval.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnApproval.setText("Approve");
        btnApproval.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnApproval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApprovalActionPerformed(evt);
            }
        });
        add(btnApproval, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 440, 210, 40));

        btnDisapproval.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnDisapproval.setText("Reject");
        btnDisapproval.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDisapproval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisapprovalActionPerformed(evt);
            }
        });
        add(btnDisapproval, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 440, 210, 40));

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));
        jPanel3.setPreferredSize(new java.awt.Dimension(926, 70));

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(51, 51, 51));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Transfusion Consent Letter Status");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 1566, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1590, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Approve based on consent received from the patient");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 380, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnApprovalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApprovalActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblPatientConsent.getSelectedRow();
        String email = (String) tblPatientConsent.getValueAt(selectedRow, 3);

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, new JLabel("<html><b>Please select a row from the table</b></html>"), "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            WorkRequest request = (WorkRequest) tblPatientConsent.getValueAt(selectedRow, 0);

            request.setStatus("Insurance Approved. Passing to BloodBank");
            dB4OUtil.storeSystem(system);
            populatePatientConsentTable();

            JOptionPane.showMessageDialog(null, new JLabel("<html><b>Insurance approved successfully!</b></html>"), "Info", JOptionPane.INFORMATION_MESSAGE);

            Enterprise ent = null;
            Organization org = null;

            for (Enterprise enterprise : network.getEnterprise_Directory().getEnterpriseList()) {
                if (enterprise.getEnterpriseType().toString().equals("BloodBank")) {
                    ent = enterprise;
                    System.out.println(enterprise);
                    break;
                }
            }

            for (Organization organization : ent.getOrganizationDirectory().getOrganizationList()) {
                if (organization instanceof Blood_Bank_Organization) {
                    org = organization;
                    break;
                }
            }

            if (org != null) {
                org.getWorkQueue().getWorkRequestList().add(request);
                System.out.println(org.getName() + "Orgcheck");
            } else {
                JOptionPane.showMessageDialog(null, "No organization present", "Error", JOptionPane.ERROR_MESSAGE);
            }

            UserAccount userAc = null;
            for (UserAccount userAcc : org.getUserAccountDirectory().getUserAccountList()) {
                userAc = userAcc;
                userAc.getWorkQueue().getWorkRequestList().add(request);
                break;
            }

            // Send email notification
            //sendEmail(email);
        }


    }//GEN-LAST:event_btnApprovalActionPerformed

    private void btnDisapprovalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisapprovalActionPerformed
        // TODO add your handling code here:

        int selectedRow = tblPatientConsent.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, new JLabel("<html><b>Please select a row from the table</b></html>"), "Warning", JOptionPane.WARNING_MESSAGE);

            // JOptionPane.showMessageDialog(null,"Please select a row", "Info", JOptionPane.INFORMATION_MESSAGE);
            return;
        } else {
            WorkRequest request = (WorkRequest) tblPatientConsent.getValueAt(selectedRow, 0);

            request.setStatus("Disapproved");
            request.setUserAccount(userAccount);
            userAccount.getWorkQueue().getWorkRequestList().add(request);

            dB4OUtil.storeSystem(system);
            populatePatientConsentTable();
            JOptionPane.showMessageDialog(null, new JLabel("<html><b>Disapproved!</b></html>"), "Info", JOptionPane.INFORMATION_MESSAGE);

            //JOptionPane.showMessageDialog(null,"Legally Disapproved", "Info", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_btnDisapprovalActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApproval;
    private javax.swing.JButton btnDisapproval;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPatientConsent;
    // End of variables declaration//GEN-END:variables

}
